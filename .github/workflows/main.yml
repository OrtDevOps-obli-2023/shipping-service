name: Push to ECR

on:
  push:
    branches:
      - main
      - feature/*

env:
  ECR_REGISTRY: "${{ vars.ECR_REGISTRY }}"
  ECR_REPOSITORY: "${{ vars.ECR_REPOSITORY }}"
  AWS_REGION: "${{ vars.AWS_REGION }}"

jobs:
  check-repo:
    name: Check Repo
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create artifact repo
        uses: actions/upload-artifact@v2
        with:
          name: checkout-repo
          path: ${{ github.workspace }}

  unit-test:
    needs: check-repo
    name: Pruebas Unitest
    runs-on: ubuntu-latest
    steps:
      - name: Unit Test Java
        run: echo "Hola UT Java"

  code-test:
    needs: check-repo
    name: Prueba code static
    runs-on: ubuntu-latest
    steps:
      - name: SonarQube
        run: echo "Hola SonarQube"


  approval:
    needs: [unit-test, code-test]
    name: Approval
    runs-on: ubuntu-latest
      
    steps:
      - name: Request approval
        id: approval
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
              const { data: { html_url: approvalUrl } } = await github.actions.createApprovalRequest({
                owner: context.repo.owner,
                repo: context.repo.repo,
                event_type: 'manual_approval',
                reviewers: ['your-username'],
                team_reviewers: ['your-team'],
                payload: {
                  message: 'Please review and approve the workflow.'
                }
              });
              core.setOutput('approvalUrl', approvalUrl)


  buil-push-ecr:
    needs: approval
    name: Etapa ECR AWS
    runs-on: ubuntu-latest

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: checkout-repo
          path: ${{ github.workspace }}

      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image to ECR
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
